{
  "version": 3,
  "sources": ["../lib/accessors.js", "../lib/ndarray.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isNegativeZero = require( '@stdlib/math-base-assert-is-negative-zero' );\n\n\n// MAIN //\n\n/**\n* Computes the minimum value of a strided array.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} minimum value\n*\n* @example\n* var toAccessorArray = require( '@stdlib/array-base-to-accessor-array' );\n* var arraylike2object = require( '@stdlib/array-base-arraylike2object' );\n*\n* var x = toAccessorArray( [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n*\n* var v = min( 4, arraylike2object( x ), 2, 1 );\n* // returns -2.0\n*/\nfunction min( N, x, strideX, offsetX ) {\n\tvar xbuf;\n\tvar get;\n\tvar min;\n\tvar ix;\n\tvar v;\n\tvar i;\n\n\t// Cache reference to array data:\n\txbuf = x.data;\n\n\t// Cache a reference to the element accessor:\n\tget = x.accessors[ 0 ];\n\n\tif ( N === 1 || strideX === 0 ) {\n\t\treturn get( xbuf, offsetX );\n\t}\n\tix = offsetX;\n\tmin = get( xbuf, ix );\n\tfor ( i = 1; i < N; i++ ) {\n\t\tix += strideX;\n\t\tv = get( xbuf, ix );\n\t\tif ( isnan( v ) ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v < min || ( v === min && isNegativeZero( v ) ) ) {\n\t\t\tmin = v;\n\t\t}\n\t}\n\treturn min;\n}\n\n\n// EXPORTS //\n\nmodule.exports = min;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isNegativeZero = require( '@stdlib/math-base-assert-is-negative-zero' );\nvar arraylike2object = require( '@stdlib/array-base-arraylike2object' );\nvar accessors = require( './accessors.js' );\n\n\n// MAIN //\n\n/**\n* Computes the minimum value of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} minimum value\n*\n* @example\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var v = min( 4, x, 2, 1 );\n* // returns -2.0\n*/\nfunction min( N, x, strideX, offsetX ) {\n\tvar min;\n\tvar ix;\n\tvar o;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\to = arraylike2object( x );\n\tif ( o.accessorProtocol ) {\n\t\treturn accessors( N, o, strideX, offsetX );\n\t}\n\tif ( N === 1 || strideX === 0 ) {\n\t\treturn x[ offsetX ];\n\t}\n\tix = offsetX;\n\tmin = x[ ix ];\n\tfor ( i = 1; i < N; i++ ) {\n\t\tix += strideX;\n\t\tv = x[ ix ];\n\t\tif ( isnan( v ) ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v < min || ( v === min && isNegativeZero( v ) ) ) {\n\t\t\tmin = v;\n\t\t}\n\t}\n\treturn min;\n}\n\n\n// EXPORTS //\n\nmodule.exports = min;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar stride2offset = require( '@stdlib/strided-base-stride2offset' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\n/**\n* Computes the minimum value of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} strideX - stride length\n* @returns {number} minimum value\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = min( N, x, 1 );\n* // returns -2.0\n*/\nfunction min( N, x, strideX ) {\n\treturn ndarray( N, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = min;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the minimum value of a strided array.\n*\n* @module @stdlib/stats-base-min\n*\n* @example\n* var min = require( '@stdlib/stats-base-min' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n*\n* var v = min( x.length, x, 1 );\n* // returns -2.0\n*\n* @example\n* var min = require( '@stdlib/stats-base-min' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var v = min.ndarray( 4, x, 2, 1 );\n* // returns -2.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n\n// exports: { \"ndarray\": \"main.ndarray\" }\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAiB,QAAS,2CAA4C,EA0B1E,SAASC,EAAKC,EAAGC,EAAGC,EAASC,EAAU,CACtC,IAAIC,EACAC,EACAN,EACAO,EACAC,EACAC,EAQJ,GALAJ,EAAOH,EAAE,KAGTI,EAAMJ,EAAE,UAAW,CAAE,EAEhBD,IAAM,GAAKE,IAAY,EAC3B,OAAOG,EAAKD,EAAMD,CAAQ,EAI3B,IAFAG,EAAKH,EACLJ,EAAMM,EAAKD,EAAME,CAAG,EACdE,EAAI,EAAGA,EAAIR,EAAGQ,IAAM,CAGzB,GAFAF,GAAMJ,EACNK,EAAIF,EAAKD,EAAME,CAAG,EACbT,EAAOU,CAAE,EACb,OAAOA,GAEHA,EAAIR,GAASQ,IAAMR,GAAOD,EAAgBS,CAAE,KAChDR,EAAMQ,EAER,CACA,OAAOR,CACR,CAKAH,EAAO,QAAUG,ICpFjB,IAAAU,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAiB,QAAS,2CAA4C,EACtEC,EAAmB,QAAS,qCAAsC,EAClEC,EAAY,IAoBhB,SAASC,EAAKC,EAAGC,EAAGC,EAASC,EAAU,CACtC,IAAIJ,EACAK,EACAC,EACAC,EACA,EAEJ,GAAKN,GAAK,EACT,MAAO,KAGR,GADAK,EAAIR,EAAkBI,CAAE,EACnBI,EAAE,iBACN,OAAOP,EAAWE,EAAGK,EAAGH,EAASC,CAAQ,EAE1C,GAAKH,IAAM,GAAKE,IAAY,EAC3B,OAAOD,EAAGE,CAAQ,EAInB,IAFAC,EAAKD,EACLJ,EAAME,EAAGG,CAAG,EACN,EAAI,EAAG,EAAIJ,EAAG,IAAM,CAGzB,GAFAI,GAAMF,EACNI,EAAIL,EAAGG,CAAG,EACLT,EAAOW,CAAE,EACb,OAAOA,GAEHA,EAAIP,GAASO,IAAMP,GAAOH,EAAgBU,CAAE,KAChDP,EAAMO,EAER,CACA,OAAOP,CACR,CAKAL,EAAO,QAAUK,IChFjB,IAAAQ,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,oCAAqC,EAC9DC,EAAU,IAoBd,SAASC,EAAKC,EAAGC,EAAGC,EAAU,CAC7B,OAAOJ,EAASE,EAAGC,EAAGC,EAASL,EAAeG,EAAGE,CAAQ,CAAE,CAC5D,CAKAN,EAAO,QAAUG,ICNjB,IAAII,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAU,IAKdF,EAAaC,EAAM,UAAWC,CAAQ,EAKtC,OAAO,QAAUD",
  "names": ["require_accessors", "__commonJSMin", "exports", "module", "isnan", "isNegativeZero", "min", "N", "x", "strideX", "offsetX", "xbuf", "get", "ix", "v", "i", "require_ndarray", "__commonJSMin", "exports", "module", "isnan", "isNegativeZero", "arraylike2object", "accessors", "min", "N", "x", "strideX", "offsetX", "ix", "o", "v", "require_main", "__commonJSMin", "exports", "module", "stride2offset", "ndarray", "min", "N", "x", "strideX", "setReadOnly", "main", "ndarray"]
}

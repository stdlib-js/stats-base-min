{
  "version": 3,
  "sources": ["../lib/min.js", "../lib/ndarray.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isNegativeZero = require( '@stdlib/math-base-assert-is-negative-zero' );\n\n\n// MAIN //\n\n/**\n* Computes the minimum value of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} minimum value\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = min( N, x, 1 );\n* // returns -2.0\n*/\nfunction min( N, x, stride ) {\n\tvar min;\n\tvar ix;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ 0 ];\n\t}\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\tmin = x[ ix ];\n\tfor ( i = 1; i < N; i++ ) {\n\t\tix += stride;\n\t\tv = x[ ix ];\n\t\tif ( isnan( v ) ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v < min || ( v === min && isNegativeZero( v ) ) ) {\n\t\t\tmin = v;\n\t\t}\n\t}\n\treturn min;\n}\n\n\n// EXPORTS //\n\nmodule.exports = min;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isNegativeZero = require( '@stdlib/math-base-assert-is-negative-zero' );\n\n\n// MAIN //\n\n/**\n* Computes the minimum value of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} minimum value\n*\n* @example\n* var floor = require( '@stdlib/math-base-special-floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = min( N, x, 2, 1 );\n* // returns -2.0\n*/\nfunction min( N, x, stride, offset ) {\n\tvar min;\n\tvar ix;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ offset ];\n\t}\n\tix = offset;\n\tmin = x[ ix ];\n\tfor ( i = 1; i < N; i++ ) {\n\t\tix += stride;\n\t\tv = x[ ix ];\n\t\tif ( isnan( v ) ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v < min || ( v === min && isNegativeZero( v ) ) ) {\n\t\t\tmin = v;\n\t\t}\n\t}\n\treturn min;\n}\n\n\n// EXPORTS //\n\nmodule.exports = min;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar min = require( './min.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( min, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = min;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the minimum value of a strided array.\n*\n* @module @stdlib/stats-base-min\n*\n* @example\n* var min = require( '@stdlib/stats-base-min' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = min( N, x, 1 );\n* // returns -2.0\n*\n* @example\n* var floor = require( '@stdlib/math-base-special-floor' );\n* var min = require( '@stdlib/stats-base-min' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = min.ndarray( N, x, 2, 1 );\n* // returns -2.0\n*/\n\n// MODULES //\n\nvar min = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = min;\n\n// exports: { \"ndarray\": \"min.ndarray\" }\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAiB,QAAS,2CAA4C,EAoB1E,SAASC,EAAKC,EAAGC,EAAGC,EAAS,CAC5B,IAAIH,EACAI,EACAC,EACAC,EAEJ,GAAKL,GAAK,EACT,MAAO,KAER,GAAKA,IAAM,GAAKE,IAAW,EAC1B,OAAOD,EAAG,CAAE,EAQb,IANKC,EAAS,EACbC,GAAM,EAAEH,GAAKE,EAEbC,EAAK,EAENJ,EAAME,EAAGE,CAAG,EACNE,EAAI,EAAGA,EAAIL,EAAGK,IAAM,CAGzB,GAFAF,GAAMD,EACNE,EAAIH,EAAGE,CAAG,EACLN,EAAOO,CAAE,EACb,OAAOA,GAEHA,EAAIL,GAASK,IAAML,GAAOD,EAAgBM,CAAE,KAChDL,EAAMK,EAER,CACA,OAAOL,CACR,CAKAH,EAAO,QAAUG,IC7EjB,IAAAO,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAiB,QAAS,2CAA4C,EAuB1E,SAASC,EAAKC,EAAGC,EAAGC,EAAQC,EAAS,CACpC,IAAIJ,EACAK,EACAC,EACAC,EAEJ,GAAKN,GAAK,EACT,MAAO,KAER,GAAKA,IAAM,GAAKE,IAAW,EAC1B,OAAOD,EAAGE,CAAO,EAIlB,IAFAC,EAAKD,EACLJ,EAAME,EAAGG,CAAG,EACNE,EAAI,EAAGA,EAAIN,EAAGM,IAAM,CAGzB,GAFAF,GAAMF,EACNG,EAAIJ,EAAGG,CAAG,EACLP,EAAOQ,CAAE,EACb,OAAOA,GAEHA,EAAIN,GAASM,IAAMN,GAAOD,EAAgBO,CAAE,KAChDN,EAAMM,EAER,CACA,OAAON,CACR,CAKAH,EAAO,QAAUG,IC5EjB,IAAAQ,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAc,QAAS,uDAAwD,EAC/EC,EAAM,IACNC,EAAU,IAKdF,EAAaC,EAAK,UAAWC,CAAQ,EAKrCH,EAAO,QAAUE,ICajB,IAAIE,EAAM,IAKV,OAAO,QAAUA",
  "names": ["require_min", "__commonJSMin", "exports", "module", "isnan", "isNegativeZero", "min", "N", "x", "stride", "ix", "v", "i", "require_ndarray", "__commonJSMin", "exports", "module", "isnan", "isNegativeZero", "min", "N", "x", "stride", "offset", "ix", "v", "i", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "min", "ndarray", "min"]
}
